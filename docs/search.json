[
  {
    "objectID": "wiki/Vocabulary.html",
    "href": "wiki/Vocabulary.html",
    "title": "Vocabulary",
    "section": "",
    "text": "The vocabulary of formal concepts referrering to formal functions is being ordered according to their position in the formal hierarchy: from piece level down to the subthematic level. In addition, concepts referring to formal types is being introduced here.\nPiece level\nMovement level\n\nSonata form\nMinuet form\nRondo form\nConcerto form\n\nSection level\n\n1st section / 2nd section / 3rd section\nExposition\nDevelopment\nRecapitulation\nCoda\nRitornello\nRefrain\nEpisode\nCouplet\nContrasting middle\n\nTheme level\n\nMain theme / Primary theme (zone)\nSubordinate theme / Second theme (zone)\n\nSubthematic level\n\nBasic idea\nContrasting idea\nCadential idea"
  },
  {
    "objectID": "wiki/Principles.html",
    "href": "wiki/Principles.html",
    "title": "Principles",
    "section": "",
    "text": "This section uses Frédéric Chopin: Mazurka in A-flat major, op. 24, 3 (1835) (see: Examples) to explain the use of TiLiA for creating form annotations."
  },
  {
    "objectID": "wiki/Principles.html#the-principle-of-having-a-top-level-root-spanning-the-entire-piece",
    "href": "wiki/Principles.html#the-principle-of-having-a-top-level-root-spanning-the-entire-piece",
    "title": "Principles",
    "section": "The principle of having a top level (“root”) spanning the entire piece",
    "text": "The principle of having a top level (“root”) spanning the entire piece\nEvery hierarchical form analysis must have a top level, spanning across the entire annotated section uninterrupted.\nThis analysis looks complete on the surface, but is missing the unifying label:\n\n\n\nChopin_no_top\n\n\nThese segments should be grouped up one more time, as above.\nLabeling of the top level: The part before the pipe symbol may be used to identify the music in a larger context, e.g. as a first movement of a sonata cycle. While the part after the symbol indicates what kind of form the piece as a whole has. If the piece is understood to be independent of any larger context, you can use generic names such as “piece”, “track”, “song” etc. The Chopin example was titled in this way, which indicates the interpretation that opus 24 is a rather loosely connected set of individual pieces, rather than a cycle expected to be heard in sequence.\nOther Examples:\n\nmov2|minuet_and_trio - The third movement of a sonata cycle, realized as a minuet with trio.\ntrack04|strophic - The fourth track in a rock album, which happens to be written in a strophic form (no chorus).\nexp|continuous - here the analysis only deals with the exposition section of a movement, so that is the head level. The exposition is continuous because it does not have a medial caesura or clear secondary theme zone."
  },
  {
    "objectID": "wiki/Principles.html#the-principle-of-locating-ideassub-phrases-at-the-bottom-level",
    "href": "wiki/Principles.html#the-principle-of-locating-ideassub-phrases-at-the-bottom-level",
    "title": "Principles",
    "section": "The principle of locating ideas/sub-phrases at the bottom level",
    "text": "The principle of locating ideas/sub-phrases at the bottom level\nThe lowest level of the hierarchy should correspond to individual musical ideas. For example in a Caplinian Style: bi (basic idea), ci (contrasting idea), cad (cadential), mod (model of a sequence), etc… \nMost pieces in the pilot corpus can be well described with Caplin-esque terms as the ones mentioned. In this Mazurka, the entire A section is a sentence with two continuation phrases.\n\n\n\nChopin_A"
  },
  {
    "objectID": "wiki/Principles.html#the-principle-of-consistent-labeling",
    "href": "wiki/Principles.html#the-principle-of-consistent-labeling",
    "title": "Principles",
    "section": "The principle of consistent labeling",
    "text": "The principle of consistent labeling\nLabeling should be consistent and follow the label syntax and vocabulary.\nThe figure above also illustrates the labeling syntax. The logic introduced at the highest level, where one label indicates the function of the segment, and the other the type that it has been realized as, is followed through to the bottom.\nIt must be understood that labels such as bi are related only to their local context. Repetions and variations of immediately preceding timespans on the same level can be indicated using % for larger sections, or the suffixes ! or ' for exact and varied repetition of an idea, respectively. If you wishes to indicate a non-adjacent repetition, you may assign a label using this syntax:\nx: theme|sent\nIn the example, the segment arbitrarily named x, which is originally a part of the presentation phrase, has been reused as part of the cadential idea."
  },
  {
    "objectID": "wiki/Home.html",
    "href": "wiki/Home.html",
    "title": "Guidelines",
    "section": "",
    "text": "Welcome to the annotation_pilot wiki!\nCode to create TOC of Wiki pages: https://github.com/DCMLab/WikiTableOfContents"
  },
  {
    "objectID": "wiki/Annotation-Tool.html",
    "href": "wiki/Annotation-Tool.html",
    "title": "TiLiA",
    "section": "",
    "text": "As our main annotation tool, we use the TimeLineAnnotator (aka. TiLiA), a GUI for producing and displaying complex annotations with video and audio files. For each piece in the corpus, a .tla file will be provided, which includes a recording aligned with a score element (musicXML), a complete beat grid, and an empty hierarchy timeline for creating the form analysis.\nThe newest version of the TiLiA app can be downloaded here or built from source using PyInstaller. Please reference the installation guide to troubleshoot common installation issues, such as safety settings blocking installation.\n\n\n\nBasic information about how to use TiLiA and its different features can be found at:\n\nTiLiA Website\nTiLiA Youtube Channel\nTiLiA GitHub\n\nMiscellaneous Workflow Advice: * Make sure that the file is saved in a non-temporary folder. * The saved .tla files cannot be opened by simply clicking on them. This means you always have to open the app first and then the file from the app. * Save your file regularly to avoid losing progress. You may also track changes via git to better remedy file corruption. * If the app crashes while you have not saved for a long time, you can check whether a file has been saved in the ‘Autosaves’ folder (File =&gt; Open Autosaves Folder =&gt; Copy path; then File =&gt; Open =&gt; Select path to Autosaves folder and open the last saved version) * Depending on what you find easier for the music, you may either proceed from larger sections to smaller ones in a top-down way (=&gt; create child, then split the child, shortcut: s), or identify small formal units and group them upwards (shortcut: g).\nPlease refer to the Principles page for more detailed guidance on how to use the app in the context of this project."
  },
  {
    "objectID": "wiki/Annotation-Tool.html#installing-tilia",
    "href": "wiki/Annotation-Tool.html#installing-tilia",
    "title": "TiLiA",
    "section": "",
    "text": "As our main annotation tool, we use the TimeLineAnnotator (aka. TiLiA), a GUI for producing and displaying complex annotations with video and audio files. For each piece in the corpus, a .tla file will be provided, which includes a recording aligned with a score element (musicXML), a complete beat grid, and an empty hierarchy timeline for creating the form analysis.\nThe newest version of the TiLiA app can be downloaded here or built from source using PyInstaller. Please reference the installation guide to troubleshoot common installation issues, such as safety settings blocking installation."
  },
  {
    "objectID": "wiki/Annotation-Tool.html#ressources-for-learning-tilia",
    "href": "wiki/Annotation-Tool.html#ressources-for-learning-tilia",
    "title": "TiLiA",
    "section": "",
    "text": "Basic information about how to use TiLiA and its different features can be found at:\n\nTiLiA Website\nTiLiA Youtube Channel\nTiLiA GitHub\n\nMiscellaneous Workflow Advice: * Make sure that the file is saved in a non-temporary folder. * The saved .tla files cannot be opened by simply clicking on them. This means you always have to open the app first and then the file from the app. * Save your file regularly to avoid losing progress. You may also track changes via git to better remedy file corruption. * If the app crashes while you have not saved for a long time, you can check whether a file has been saved in the ‘Autosaves’ folder (File =&gt; Open Autosaves Folder =&gt; Copy path; then File =&gt; Open =&gt; Select path to Autosaves folder and open the last saved version) * Depending on what you find easier for the music, you may either proceed from larger sections to smaller ones in a top-down way (=&gt; create child, then split the child, shortcut: s), or identify small formal units and group them upwards (shortcut: g).\nPlease refer to the Principles page for more detailed guidance on how to use the app in the context of this project."
  },
  {
    "objectID": "wiki/Annotation-Tool.html#preparing-a-new-tilia-file-for-analysis",
    "href": "wiki/Annotation-Tool.html#preparing-a-new-tilia-file-for-analysis",
    "title": "TiLiA",
    "section": "Preparing a new TiLiA file for analysis",
    "text": "Preparing a new TiLiA file for analysis\n\nAligning a score with an audio recording\n\nGenerate an aligned beat grid\nThe first step is to generate a &lt;filename&gt;.tilia.csv file containing a beat grid for the score, mapped to the corresponding timecodes in the recording.\nWhat you need:\n\na working Python environment with Python 3.10 or newer (we recommend Miniconda)\na MuseScore file of the piece in question\nan audio recording, possibly one in the public domain so that it can be shared\n\nfirst stop: IMSLP\nCreative Commons Search\nMusOpen (requires log-in)\narchive.org\nMusical Heritage Organization\n\n\nThen you can:\n\nhead to johentsch/ms3_realtime and do the first-time setup\nfollow the instructions under Deriving timelines from aligned notes\n\n\n\nImport the beatgrid into the TiLiA file\nInstructions are in the same document over there @ ms3_realtime.\n\n\nImport the score\n\nIf the score contains annotations, you first need to remove them.\n\n\n\n\nPreparing a repo: Batch alignment\n\nDownload public domain recordings\n\nBefore anything, rename them so that they can easily be matched with the scores but without removing important identifiers. E.g. for the bach_solo repo, the recordings combine the piece IDs with the original IMSLP filename: BWV1007_01_Prelude-IMSLP717130-PMLP164349-Casals.\nIf the original files are in WAV format, use that for alignment but add a conversion to MP3 to the repo. E.g.:\nfor f in *.wav; do ffmpeg -i \"$f\" -vn -ac 2 -codec:a libmp3lame -q:a 0 \"${f%.wav}.mp3\"; done\n\nMake sure that the unfolded notes table match the recordings. E.g., in the case of bach_solo suites BWV 1007 and 1008, the two minuets came in two separate scores but in a single audio file following the “minuet 1 da capo”. Although in theory it would be conceivable to split the audio recording, the obvious solution here is to create a unified score which encodes the repeat structure of the encoding and to create the unfolded notes table from that.\nCreate a batch CSV file mapping audio to notes TSV files.\n\nCreate a CSV file with the columns “audio” and “notes” containing the respective file paths. Paths should use / separators, not \\. Relative paths relative to the repo’s top level are advisable.\nFor controlling the output file names, an optional “name” column can be added.\n\nAlign\n\nms3_realtime approach (preferred)\n\nOutput CSV files for TiLiA import directly (-tla option).\nCommit to the respective subfolder under alignments.\n\nbeat_this approach (requires torch which can take time to set up)\n\nUse beat_this to create one .beats file per recording\nUse the beats2measuregrid.py script to convert the files to TiLiA’s CSV format.\n\n\nCreate TiLiA files manually.\n\n\n\nRe-align an existing TiLiA analyses\n\nWhat you need:\n\nthe TiLiA project exported to JSON\nthe audio file to re-align the project to\na MuseScore file corresponding to the recording (e.g. when someone does not play repeats, these repeats need to be removed from the score)"
  },
  {
    "objectID": "Vocabulary.html",
    "href": "Vocabulary.html",
    "title": "Vocabulary",
    "section": "",
    "text": "Form labels and abbreviations\nThe table below is a subset of https://cloud.bruckneruni.at/index.php/s/awFF9yZE3reSxoG?dir=/&openfile=true which is still work in progress. These include the most relevant labels and abbreviations for piloting the guidelines.\nThe vocabulary of formal concepts referring to formal functions is grouped according to their position in the formal hierarchy: Movement, Section, Phrase, Subphrase levels. Each term corresponds either to a formal type or a formal function. Most labels come with an abbreviation which is the preferred way to use it.\nIn order to learn about how labels are combined, please refer to Syntax.\n\n\n\nForm label vocabulary\n\n\n\n\n\n\n\n\n\nHierarchical level\nFunction/type\nLabel\nShort label\nShort explanation\n\n\n\n\nMovement level\ntype\nminuet form\n\nABA’ structure, split into three parts ternary or binary\n\n\nMovement level\ntype\nrondo form\n\nalternation of refrain and contrasting couplets/episodes\n\n\nMovement level\ntype\nsonata form\n\nBinary or ternary form\n\n\nMovement level\ntype\nconcerto form\n\nsix part structure: 1) opening ritornello for orchestra, 2) a solo section, 3) subordinate-key ritornello for orchestra, 4) solo section functioning as recapitulation, 6) closing ritornello for orchestra interrupted by solo cadenza\n\n\nPhrase level\nType\nperiod\npd\nTwo-part structure, consisting of an antecendent (HC or IAC) and a consequent (concluded by PAC)\n\n\nPhrase level\nType\nsentence\nsent\nTwo-part structure, consisting of a presentation (no cadence) and a continuation (concluded by a half or full cadence). The presentation in turn is made up of two (less frequently one or three) basic ideas.\n\n\nSection level\nFunction\ndevelopment section\ndev\n4 modules: 1) link from exposision, 2) entry zone, 3) central-action zone, 4) retransition\n\n\nSection level\nFunction\nexposition\nexp\nTwo-part or continous form/type\n\n\nSection level\nFunction\nrecapitulation\n\nessential sonata closure and re-composition\n\n\nSubphrase level\nFunction\nbasic idea\nbi\nsmallest formal unit of a theme (typically 2 bars in length)\n\n\nSubphrase level\nFunction\ncontinuation\n\n\n\n\nSubphrase level\nFunction\ncontrasting idea\nci\n\n\n\nSubphrase level\nFunction\npresentation"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "https://data.snf.ch/grants/grant/10000183"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Intro: What is form? A working definition\nTiLiA App: Learn about the annotation tool\nPrinciples: Basic rules that should always hold\nVocabulary: Collection and explanation of possible form annotation labels\nSyntax: Syntactic rules of how labels can be combined, enhanced, and specified\nExamples: Example analysis and discussions thereof\nAbout: About the form project"
  },
  {
    "objectID": "wiki/Annotation-Guidelines.html#classical-style",
    "href": "wiki/Annotation-Guidelines.html#classical-style",
    "title": "Intro",
    "section": "Classical Style",
    "text": "Classical Style"
  },
  {
    "objectID": "wiki/Annotation-Guidelines.html#pop-rock",
    "href": "wiki/Annotation-Guidelines.html#pop-rock",
    "title": "Intro",
    "section": "Pop Rock",
    "text": "Pop Rock"
  },
  {
    "objectID": "wiki/Examples.html",
    "href": "wiki/Examples.html",
    "title": "Examples",
    "section": "",
    "text": "F. Chopin - Mazurka in A-flat major, op. 24, no. 3\n\nTiLiA file: chopin_24-3_example.tla (chopin_model branch)\nRecording in the same folder (by Edward Neeman, downloaded from IMSLP)\n\n\n\nJ.S. Bach – Sarabande from BWV 1007\n\nTiLiA file: TiLiA/BWV1007_04_Sarabande.tla (bach_model branch)\n\n\n\n\n\n\n\nFigure 1: First eight bars of IV. Sarabande from BWV 1007 with two alternative readings.\n\n\n\nThis example presents two different interpretations of this Suite movement’s first section. Whereas the second one, labeled as “Alternative”, uses our standard vocabulary, the first one is an experimental attempt to using the term Fortspinnungstypes, a staple in German-speaking Baroque theory. Here, the traditional three-part structure (Initiale, Fortspinnung, Kadenz; i.e. “beginning”, “continuation”, “cadential”) has been hierarchised into a pres + cont where the middle of the whole (Fortspinnung) is the beginning of the continuation and the cad is the ending of both the cont and the whole. This conceptualisation makes this type recognizable as a subtype of sent.\nWhereas this perspective groups the first part as [8 2 [6 2 [4 2 2] ] ], the second describes a symmetric [8 [4 2 2] [4 2 2] ] grouping (in this notation, each [ marks the parent node of a sub-branch, followed by its children and ]). Verbally, the first view sets the initial of the piece as apart and accounts for its being a relatively self-contained, chiastic open-close (or departure-arrival) motion which can stand for itself, like a motto. The second interpretation highlights the expositional character of the first four bars by grouping them under an overarching pres phrase. Contrary to the first view, the second compound basic idea is marked as a variation of the first one (cbi') because of a vague sense of return of the chiasmus. The first interpretation does not include the ' in the interest of reinforcing the sense of separation between measure 2 and 3.\nOn a minor note, the cad has been split on the lowest level to indicate the rhythmic-harmonic acceleration towards the cadence but no labels have been applied."
  },
  {
    "objectID": "wiki/Intro.html",
    "href": "wiki/Intro.html",
    "title": "Intro",
    "section": "",
    "text": "Before starting to annotate musical forms, it is useful to familiarize oneself with a working definition of form. Although there is no universally shared understanding of musical form, we wish to propose a working definition that contains typical components of form:\n\nSegmentation: The auditory stream of events is usually subdivided (or grouped) into larger chunks of events. Segmentation may be based on a variety of factors such as gestalt principles or closing patterns such as cadences. Furthermore, adjacent groups may be disjunct or conjunct to each other (phrase overlap).\nHierarchy: Groups of events can be combined into ever larger groups, thus creating hierarchical relationships between them.\nFunctionality: Groups do not only occur at a certain temporal position within the overall structure; they can also express their form-functionality (i.e., their temporal qualities) through their intrinsic features (see below: interfaces with musical form). They may project a sense of beginning, middle, or end at different hierarchical levels.\nRepetition structure: Groups may be repetitions or variations of other groups, or they express a contrast to other groups.\nFormal templates: the ordering of groups as well as the functionalities they express may be such that typical patterns emerge which we refer to as formal templates or designs (e.g., minuet form, rondo form, sonata form, etc.). Formal designs may also be the result of the combination of two (or more) formal types (e.g., a theme combining elements from a “sentence” and a “period”); this is known as hybrid form.\n\nAn important aspect to be included is “reinterpretation”: it is a characteristic feature of music in general that some structural hearings may not be static but depend on their temporal contextualization and the subsequent course of events during listening (which may or may not necessitate a re-evaluation of interpretation). Reinterpretation (or revision) is itself not a genuine aspect of the grammar, but a kind of effect that arises from processing during listening when the grammar allows for ambiguity. In the domain of form, this subdivides into two categories: (a) the functional reinterpretation of entire units based on later events; (b) the idea of “becoming” (i.e. gradual transformation) based on later events (e.g., a main-theme codetta turning into a transition).\nThe ways in which features (1) to (5) are analyzed depends on style-specific realizations of other structural domains (such as harmony, tonality, voice-leading, texture, instrumentation/timbre etc.) which may be understood as interfaces with musical form.\nNegative definitions of form: While it is certainly easier to come up with a list of features that, in one way or another, are associated with the concept of musical form, it is more difficult to set form apart from other concepts which may either be close to, or intersect with, the notion of form. One such related concept is “narrative” unfolding. For example, a piece of music may display the design of a “sonata form”, it may consist of functional units (such as themes, presentation phrases, and basic ideas); but whether the piece exemplifies a “per aspera ad astra” narrative trajectory (or some different narrative scheme), is to be considered distinct from the formal outline (with which it may interact, though). However, it is worth mentioning that, given the fluid boundaries of the theoretical concepts we are dealing with, the relationship between these concepts may turn out to be different at the end of our project."
  },
  {
    "objectID": "wiki/Syntax.html",
    "href": "wiki/Syntax.html",
    "title": "Syntax",
    "section": "",
    "text": "Overview\nIn TiLiA, each element in a hierarchy timeline should be given a label. The use of labels should follow a syntax, which extends that of Gotham and Ireland (2019). This page outlines the most important features of this syntax.\n\n\n\n\n\n\n\n\nFeature\nSymbol\nExample\n\n\n\n\nFormal types\nDot (.)\n0: sonata form.type 2\n\n\nTypological realization\nPipe (|)\n4: antecedent | sentence\n\n\nAdjacent repetitions\nExclamation mark(s) (!, !!, !!!)\n6: bi; 6: bi!; 6: bi!!\n\n\nPartial emergences or repetitions\nAsterisk (*)\n4: 1st* or 4: 1st*!\n\n\nSpecification of units within units\nHyphen (-) + Arabic numeral\n4: 2nd-1\n\n\nDistant repetitions\nSquare brackets ([])\n3: 2nd zone, 4: 2nd-1 [1st-1*]\n\n\nAlternative readings\nHyphen (-)\n4: consequent - transition\n\n\nMultivalence\nLower-case Roman num. + hyphen (-)\n4i: consequent - ii: transition\n\n\nOverlap of formal levels\nAnd (&)\n4ii&iii: pres\n\n\nFormal hybrids\nLower-case letters\n0a: sonata form, 0b: rondo\n\n\nFunctional transformation\n‘Arrows’ (&lt;, &gt;, &lt;&gt;)\n4: transition, 5: &lt; consequent\n\n\nUncertainty\nQuestion mark (?)\n5: bi?\n\n\nOverlap/ continuation\nSlash (/)\ni: /, ii:\n\n\nOverlap\nPlus (+)\n1st + tr\n\n\nEnd of level\nClosing curly bracket (})\n6: bi}\n\n\n\n\n\nHierarchical Levels\nThe syntax can be applied on different annotation apps, though some aspects differ in usuage. In annotation in MuseScore, a typical first label of a sonata-form movement can look like this:\n0: mvt1|sonata.type1, 1: exp, 2: 1st zone, 3: theme|sent, 4: pres, 5: bi\nWhen using TiLiA, it is not necessary to specify the position within the hierarchical structure by an integer, since it is captured within the hierarchy timeline. One would simply write mvt1|sonata.type1 in the highest component. However, we still reference the integer levels in this guide in order to make the underlying logic clear.\n\n\nTypes and functions\nOur standard distinguishes between formal functions and types (Caplin, 1998). Realisations of formal functions (on any hierarchical leve) are appended to the relevant token using a pipe symbol (|). For instance, the label component 0: mvt1|sonata.type1 is to be read as ‘first movement, realized as sonata form type 1’, while the component 3: theme|sent tells us that the theme within the 1st zone is realized as a Caplinian (or Schoenbergian) sentence.\nTiLiA does offer dedicated fields for types and function, but for now we recommend writing them into the “label” field in the inspector.\n\n\nVocabulary and abbreviations\nFor easier annotation, we have implemented a series of abbreviations for the most frequent terms in formal analysis. See the Vocabulary page for reference. In any case where you do not see a fitting label for a segment, you can use the neutral label unit.\n\n\nMaterial content and repetition\nDespite the standard’s focus on form, we allow for the annotation of material content and its use. For the repetition of materials we propose marking adjacent repetitions with an exclamation mark (!) appended to the relevant token. The number of exclamation marks stands for the number of adjacent repetitions (for instance, 5: bi!! for the second adjacent repetition of a basic idea). An asterisk appended to any label indicates that the re-occurrence of the relevant function is partial. Distant repeats can be annotated using square brackets indicating the material that is repeated. For instance, 3: 2nd zone, 4: 2nd [1st*] would indicate a partial repeat of 1st-theme material in the secondary-theme zone, characteristic of the so-called monothematic expositions.\nTo avoid ambiguous references, it is possible to assign unique custom names to components that you wish to reference in other places, for example main_theme: theme|sent, means that we call this theme (realised as a sentence) “main_theme”, so if we later write coda [main_theme] it is clear that the coda is repeating that particular theme, not another.\n\n\nFormal transformation\n‘Form-functional transformation’ (Dahlhaus 1987; Schmalfeldt 2011) is expressed in our standard by separating the two functional tokens with greater-than (&gt;) or a less-than (&lt;) symbols, or both (&lt;&gt;). When the transformation occurs within a single formal level, the three symbols stand for the three possible directions: &gt; for forward transformation (Horton 2017), &lt; for retrospective transformation (Martin and Vande Moortele 2014), and &lt;&gt; for bidirectional transformation (Vande Moortele 2013).\n\n\nAmbiguity, diverging interpretations or multi-dimensional forms\nUncertain labels can be highlighted using a question mark. There are also cases where the form can be understood in several different ways, which are either mutually exclusive analytical perspectives, or different formal models being used at the same time. One example of “multidimensional form” could be the main theme zone of a sonata form being structured as a fugue, which invites two different modes of decoding the form at the same time. In both cases, one should open a seperate hierarchy timeline and use it as an addition to add the other layer for the relevant passage.\n\n\n\n\n\n\n\n\nReferences\n\nDahlhaus, Carl. 1987. Beethoven Und Seine Zeit. Laaber: Laaber-Verlag.\n\n\nGotham, Mark, and Matthew T Ireland. 2019. “Taking Form: A Representation Standard, Conversion Code, and Example Corpus for Recording, Visualizing and Studying Analyses of Musical Form.” 20th International Society for Music Information Retrieval Conference, Delft, 633–99.\n\n\nHorton, Julian. 2017. “Criteria for a Theory of Nineteenth-Century Sonata Form.” Music Theory and Analysis 4 (11): 147–91. https://doi.org/10.11116/MTA.4.2.1.\n\n\nMartin, Nathan John, and Steven Vande Moortele. 2014. “Formal Functions and Retrospective Reinterpretation in the First Movement of Schubert’s String Quintet.” Music Analysis 33 (2): 130–55. https://doi.org/10.1111/musa.12025.\n\n\nSchmalfeldt, Janet. 2011. In the Process of Becoming: Analytic and Philosophical Perspectives on Form in Early Nineteenth-century Music. Oxford University Press.\n\n\nVande Moortele, Steven. 2013. “In Search of Romantic Form.” Music Analysis 32 (3): 404–31. https://www.jstor.org/stable/43864519."
  }
]